syntax = "proto3";
// protoc --go_out=../ --go-grpc_out=../ --go_opt=paths=source_relative --go-grpc_opt=paths=source_relative bot_message.proto
// protoc --go_out=./ --go-grpc_out=./ .\protos\qq_guild\message.proto
package entity;
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "internal/pkg/stub";
option java_multiple_files = true;
option java_package = "me.aki.server.bot.grpc.stub";
option java_outer_classname = "GuildMessageProto";

service QQGuild{
  rpc GetMessage(google.protobuf.Empty) returns(stream GuildEventData) {}
}

message GuildEventData {
  string id = 1;
  EventType event_type = 2;
  User self = 3;
  oneof data {
    Message message_event_data = 4;
    MessageDeleteEventData message_delete_event_data = 5;
    Member member_event_data = 6;
    MessageReaction message_reaction_event_data = 7;
    Interaction interaction_event_data = 8;
  }
}

enum EventType {
  // 默认的未指定值
  EVENT_TYPE_UNSPECIFIED = 0;

  // 枚举值
  MESSAGE = 1;
  MESSAGE_DELETE = 2;
  DIRECT_MESSAGE = 3;
  GUILD_MEMBER_ADD = 4;
  GUILD_MEMBER_UPDATE = 5;
  GUILD_MEMBER_REMOVE = 6;
  MESSAGE_REACTION_ADD = 7;
  MESSAGE_REACTION_REMOVE = 8;
  INTERACTION_CREATE = 9;
}

// Message 消息结构体定义
message Message {
  string id = 1;  // 消息ID
  string channel_id = 2;  // 子频道ID
  string guild_id = 3;  // 频道ID
  string content = 4;  // 内容
  google.protobuf.Timestamp timestamp = 5;  // 发送时间
  google.protobuf.Timestamp edited_timestamp = 6;  // 消息编辑时间
  bool mention_everyone = 7;  // 是否@all
  User author = 8;  // 消息发送方
  Member member = 9;  // 消息发送方Author的member属性，只是部分属性
  repeated MessageAttachment attachments = 10;  // 附件
  repeated Embed embeds = 11;  // 结构化消息-embeds
  repeated User mentions = 12;  // 消息中的提醒信息(@)列表
  Ark ark = 13;  // ark 消息
  bool direct_message = 14;  // 私信消息
  string seq_in_channel = 15;  // 子频道 seq
  MessageReference message_reference = 16;  // 引用的消息
  string src_guild_id = 17; // 私信场景下，该字段用来标识从哪个频道发起的私信
}

message MessageDeleteEventData {
  Message message = 1;
  User op_user = 2;
}

// MessageReference 引用消息
message MessageReference {
  string message_id = 1; // 消息 id
  bool ignore_get_message_error = 2; // 是否忽律获取消息失败错误
}

// Ark 消息模版
message Ark {
  int32 template_id = 1; // ark 模版 ID
  repeated ArkKV kv = 2; // ArkKV 数组
}

// ArkKV Ark 键值对
message ArkKV {
  string key = 1;
  string value = 2;
  repeated ArkObj obj = 3;
}

// ArkObj Ark 对象
message ArkObj {
  repeated ArkObjKV obj_kv = 1;
}

// ArkObjKV Ark 对象键值对
message ArkObjKV {
  string key = 1;
  string value = 2;
}

// Embed 结构
message Embed {
  string title = 1;
  string description = 2;
  string prompt = 3; // 消息弹窗内容，消息列表摘要
  MessageEmbedThumbnail thumbnail = 4;
  repeated EmbedField fields = 5;
}

// MessageEmbedThumbnail embed 消息的缩略图对象
message MessageEmbedThumbnail {
  string url = 1;
}

// EmbedField Embed字段描述
message EmbedField {
  string name = 1;
  string value = 2;
}

// MessageAttachment 附件定义
message MessageAttachment {
  string url = 1;
}

// MessageReactionUsers 消息表情表态用户列表
message MessageReactionUsers {
  repeated User users = 1;
  string cookie = 2;
  bool is_end = 3;
}

// User 用户
message User {
  string id = 1;
  string username = 2;
  string avatar = 3;
  bool bot = 4;
  string union_openid = 5; // 特殊关联应用的 openid
  string union_user_account = 6; // 机器人关联的用户信息，与union_openid关联的应用是同一个
}

// Member 群成员
message Member {
  string guild_id = 1;
  google.protobuf.Timestamp joined_at = 2;
  string nick = 3;
  User user = 4;
  repeated string roles = 5;
  string op_user_id = 6;
}

// Interaction 互动行为对象
message Interaction {
  string id = 1;             // 互动行为唯一标识
  string application_id = 2; // 应用ID
  InteractionType type = 3;  // 互动类型
  InteractionData data = 4;  // 互动数据
  string guild_id = 5;       // 频道 ID
  string channel_id = 6;     // 子频道 ID
  uint32 version = 7;        // 版本，默认为 1
}

// InteractionType 互动类型
enum InteractionType {
  INTERACTION_TYPE_UNSPECIFIED = 0; // 未指定
  INTERACTION_TYPE_PING = 1;        // ping
  INTERACTION_TYPE_COMMAND = 2;     // 命令
}

// InteractionData 互动数据
message InteractionData {
  string name = 1;           // 标题
  InteractionDataType type = 2; // 数据类型，不同数据类型对应不同的 resolved 数据
  bytes resolved = 3;        // 跟不同的互动类型和数据类型有关系的数据
}

// InteractionDataType 互动数据类型
enum InteractionDataType {
  INTERACTION_DATA_TYPE_UNSPECIFIED = 0; // 未指定
  INTERACTION_DATA_TYPE_CHAT_SEARCH = 9; // 聊天框搜索
}

// ReactionTargetType 表情表态对象类型
enum ReactionTargetType {
  REACTION_TARGET_TYPE_UNSPECIFIED = 0; // 未指定
  REACTION_TARGET_TYPE_MSG = 1;         // 消息
  REACTION_TARGET_TYPE_FEED = 2;        // 帖子
  REACTION_TARGET_TYPE_COMMENT = 3;     // 评论
  REACTION_TARGET_TYPE_REPLY = 4;       // 回复
}

// MessageReaction 表情表态动作
message MessageReaction {
  string user_id = 1;     // 用户ID
  string channel_id = 2;  // 子频道ID
  string guild_id = 3;    // 频道ID
  ReactionTarget target = 4; // 表态对象
  Emoji emoji = 5;          // 表情
}

// ReactionTarget 表态对象类型
message ReactionTarget {
  string id = 1;                    // ID
  ReactionTargetType type = 2;      // 类型
}

// Emoji 表情
message Emoji {
  string id = 1;   // ID
  int32 type = 2;  // 类型
}
